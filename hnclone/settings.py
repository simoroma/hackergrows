"""
Django settings for hnclone project.

Generated by 'django-admin startproject' using Django 2.2.5.

Modified by me 2019-09-30 15.50 CEST

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
from socket import gethostname, gethostbyname
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# Used to send errors
ADMINS = [('Hackergrows admin', 'admin@hackergrows.com')]
# Emails will be from
SERVER_EMAIL = 'noreply@hackergrows.com'

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = (os.getenv("DEBUG") == 'True')
PRODUCTION = (os.getenv("PRODUCTION") == 'True')
ALLOWED_HOSTS = os.getenv('ALLOWED_HOSTS', '').split()

if 'hackergrows.com' in os.getenv('ALLOWED_HOSTS'):
    ALLOWED_HOSTS.append(gethostbyname(gethostname()))

USE_X_FORWARDED_HOST = True


# Application definition

INSTALLED_APPS = [
    'hnclone',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',

    'mptt',
    'debug_toolbar',

    'accounts',
    'news',
    'emaildigest',

    # health check
    'health_check',
    'health_check.db',
    'health_check.cache',
    'health_check.storage',

    'admin_honeypot',
]

MIDDLEWARE = [
    'hnclone.middleware.RemoteAddrMiddleware',
    'debug_toolbar.middleware.DebugToolbarMiddleware',

    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # 'django.middleware.gzip.GZipMiddleware',
    # 'htmlmin.middleware.HtmlMinifyMiddleware', # TODO: When activated, Django Debug Toolbar has JS issues
    'htmlmin.middleware.MarkRequestMiddleware',
]

ROOT_URLCONF = 'hnclone.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'hnclone.context_processors.settings_context_processor',
            ],
        },
    },
]

WSGI_APPLICATION = 'hnclone.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

if 'DB_HOST' in os.environ:
    DATABASES = {
        'default': {
            'ENGINE': os.environ['DB_ENGINE'],
            'NAME': os.environ['DB_NAME'],
            'USER': os.environ['DB_USER'],
            'PASSWORD': os.environ['DB_PASSWORD'],
            'HOST': os.environ['DB_HOST'],
            'PORT': os.environ['DB_PORT'],
            'AUTO_CREATE': os.environ['DB_AUTO_CREATE']
        }
    }
else:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        }
    }


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "assets"),
]

AUTH_USER_MODEL = 'accounts.CustomUser'


INTERNAL_IPS = [
    '127.0.0.1',
]


PAGING_SIZE = 30


HTML_MINIFY = True


LOGOUT_REDIRECT_URL = '/'
LOGIN_REDIRECT_URL = '/'


ACCEPT_UNINVITED_REGISTRATIONS = True


SITE_NAME = 'Hackergrows'
SITE_URL = 'https://hackergrows.com'
SITE_DOMAIN = 'hackergrows.com'


# Email
if 'hackergrows.com' in os.getenv('ALLOWED_HOSTS'):
    EMAIL_BACKEND = os.getenv("EMAIL_BACKEND")
    EMAIL_HOST = os.getenv("EMAIL_HOST")
    EMAIL_HOST_USER = os.getenv("EMAIL_HOST_USER")
    EMAIL_HOST_PASSWORD = os.getenv("EMAIL_HOST_PASSWORD")
    EMAIL_PORT = os.getenv("EMAIL_PORT")
    EMAIL_USE_SSL = (os.getenv("EMAIL_USE_SSL") == 'True')
    DEFAULT_FROM_EMAIL = os.getenv("DEFAULT_FROM_EMAIL")
else:
    EMAIL_BACKEND = os.getenv("EMAIL_BACKEND")
# end email

SITE_REDIRECT_URI = os.getenv("SITE_REDIRECT_URI")

REAL_ADMIN_PATH = os.getenv("REAL_ADMIN_PATH")
